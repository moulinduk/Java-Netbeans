
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MOULINDU KUNDU
 */
public class Meaning extends javax.swing.JFrame {

    /**
     * Creates new form Meaning
     */
    public Meaning() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("small hills of sand formed by the wind");

        jButton1.setText("Next");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Check");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("Word Meaning");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        double ran; int rn;
        ran = Math.random() * 1000000000;
        rn = ((int) ran)%62;
        switch (rn)
        {
            case 0: jLabel1.setText("confused"); break;
            case 1: jLabel1.setText("a small dog with flat face"); break;
            case 2: jLabel1.setText("small eyed"); break;
            case 3: jLabel1.setText("walked up"); break;
            case 4: jLabel1.setText("angry"); break;
            case 5: jLabel1.setText("pleasantly"); break;
            case 6: jLabel1.setText("storm"); break;
            case 7: jLabel1.setText("spinning round and round"); break;
            case 8: jLabel1.setText("nest"); break;
            case 9: jLabel1.setText("the short lower part of stem of crops"); break;
            case 10: jLabel1.setText("grass-covered land"); break;
            case 11: jLabel1.setText("small brown nut of oak tree"); break;
            case 12: jLabel1.setText("making repeated, quick, light sounds"); break;
            case 13: jLabel1.setText("rough-sounding"); break;
            case 14: jLabel1.setText("a species of bird originally from southern Africa"); break;
            case 15: jLabel1.setText("to twist something with force"); break;
            case 16: jLabel1.setText("producing bright light"); break;
            case 17: jLabel1.setText("a mixture of loud, unpleasant sounds"); break;
            case 18: jLabel1.setText("a repeated, quick and light sound"); break;
            case 19: jLabel1.setText("a mammal with claws found in America"); break;
            case 20: jLabel1.setText("to push with a finger or with a pointed object"); break;
            case 21: jLabel1.setText("talked quickly and continuously"); break;
            case 22: jLabel1.setText("slowed down"); break;
            case 23: jLabel1.setText("looked at something with eyes partly shut"); break;
            case 24: jLabel1.setText("enjoyed the full taste of something"); break;
            case 25: jLabel1.setText("make full"); break;
            case 26: jLabel1.setText("an abbreviated form of beneath"); break;
            case 27: jLabel1.setText("a thick cloud"); break;
            case 28: jLabel1.setText("sweet smell"); break;
            case 29: jLabel1.setText("to make a long deep sound when in pain"); break;
            case 30: jLabel1.setText("cried out in a prolonged tone"); break;
            case 31: jLabel1.setText("hanging or swinging freely"); break;
            case 32: jLabel1.setText("a flat rock surface sticking out from a cliff"); break;
            case 33: jLabel1.setText("edge"); break;
            case 34: jLabel1.setText("a kind of sea fish"); break;
            case 35: jLabel1.setText("smoothening feathers"); break;
            case 36: jLabel1.setText("a raised portion of land"); break;
            case 37: jLabel1.setText("rising upwards while flying"); break;
            case 38: jLabel1.setText("calling by using signals"); break;
            case 39: jLabel1.setText("to equip a boat or a ship for a long journey"); break;
            case 40: jLabel1.setText("stirring"); break;
            case 41: jLabel1.setText("imprisonment"); break;
            case 42: jLabel1.setText("playing around in a lively, happy way"); break;
            case 43: jLabel1.setText("sweat"); break;
            case 44: jLabel1.setText("persuaded somebody earnestly"); break;
            case 45: jLabel1.setText("crushed"); break;
            case 46: jLabel1.setText("an old form of Indian currency"); break;
            case 47: jLabel1.setText("rudeness"); break;
            case 48: jLabel1.setText("covered with dirt"); break;
            case 49: jLabel1.setText("a dishonest person"); break;
            case 50: jLabel1.setText("looked at somebody angrily"); break;
            case 51: jLabel1.setText("disolate"); break;
            case 52: jLabel1.setText("ate all of something quickly"); break;
            case 53: jLabel1.setText("a kind of hanging bed generally made of net"); break;
            case 54: jLabel1.setText("secured"); break;
            case 55: jLabel1.setText("mark"); break;
            case 56: jLabel1.setText("animal fat used to make candles"); break;
            case 57: jLabel1.setText("moving in curves"); break;
            case 58: jLabel1.setText("sudden forward and back ward movement"); break;
            case 59: jLabel1.setText("path"); break;
            case 60: jLabel1.setText("searched"); break;
            case 61: jLabel1.setText("aim"); break;
            default: 
        }
        jTextField1.setText("");
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String a, b;
        a = jLabel1.getText();
        b = jTextField1.getText();
        if ("confused".equals(a) && "bewildered".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a small dog with flat face".equals(a) && "Pekinese dog".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("small eyed".equals(a) && "beady eyed".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("walked up".equals(a) && "strolled up".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("angry".equals(a) && "indignant".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("pleasantly".equals(a) && "genially".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("storm".equals(a) && "gale".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("nest".equals(a) && "cote".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("the short lower part of stem of crops".equals(a) && "stubble".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("grass-covered land".equals(a) && "lea".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("small brown nut of oak tree".equals(a) && "acorns".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("making repeated, quick, light sounds".equals(a) && "pattering".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("rough-sounding".equals(a) && "hoarse".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a species of bird originally from southern Africa".equals(a) && "touracos".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("to twist something with force".equals(a) && "wrench".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("producing bright light".equals(a) && "fluorescent".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a mixture of loud, unpleasant sounds".equals(a) && "cacophony".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a repeated, quick and light sound".equals(a) && "patter".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a mammal with claws found in America".equals(a) && "armadillo".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("to push with a finger or with a pointed object".equals(a) && "prod".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("talked quickly and continuously".equals(a) && "chattered".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("slowed down".equals(a) && "slackened".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("looked at something with eyes partly shut".equals(a) && "squinted".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("enjoyed the full taste of something".equals(a) && "savoured".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("make full".equals(a) && "fill".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("an abbreviated form of beneath".equals(a) && "'neath".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a thick cloud".equals(a) && "pall".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("sweet smell".equals(a) && "fragrance".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("to make a long deep sound when in pain".equals(a) && "groan".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("cried out in a prolonged tone".equals(a) && "moaned".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("hanging or swinging freely".equals(a) && "dangling".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a flat rock surface sticking out from a cliff".equals(a) && "ledge".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("edge".equals(a) && "brink".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a kind of sea fish".equals(a) && "herring".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("smoothening feathers".equals(a) && "preening".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("rising upwards while flying".equals(a) && "soaring".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("calling by using signals".equals(a) && "beckoning".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("to equip a boat or a ship for a long journey".equals(a) && "rigged".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("stirring".equals(a) && "quaking".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("imprisonment".equals(a) && "captivity".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("playing around in a lively, happy way".equals(a) && "frolicking".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("sweat".equals(a) && "perspiration".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("persuaded somebody earnestly".equals(a) && "coaxed".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("crushed".equals(a) && "crumpled".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("an old form of Indian currency".equals(a) && "anna".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("rudeness".equals(a) && "impudence".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("covered with dirt".equals(a) && "grimy".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a dishonest person".equals(a) && "crook".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("looked at somebody angrily".equals(a) && "scowled".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("disolate".equals(a) && "dismal".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("ate all of something quickly".equals(a) && "devoured".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a kind of hanging bed generally made of net".equals(a) && "hammock".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("secured".equals(a) && "fortified".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("mark".equals(a) && "notch".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("animal fat used to make candles".equals(a) && "tallow".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("moving in curves".equals(a) && "reeling".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("sudden forward and back ward movement".equals(a) && "flickering".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("path".equals(a) && "trail".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("searched".equals(a) && "quested".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("aim".equals(a) && "intent".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("small hills of sand formed by the wind".equals(a) && "sand dunes".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("spinning round and round".equals(a) && "twirling".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else if ("a raised portion of land".equals(a) && "hump".equals(b))
        {
            JOptionPane.showMessageDialog(null, "CORRECT Answer!!!");
            jButton1.setEnabled(rootPaneCheckingEnabled);
        }
        else 
            JOptionPane.showMessageDialog(null, "Wrong Answer.\nTry Again.");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Meaning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Meaning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Meaning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Meaning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Meaning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
